<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>OAuth2Client</name></assembly>
<members>
<member name="T:AssemblyInfo">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:OAuth2Client.OAuth2BearerModule.System-Net-IAuthenticationModule-PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
<summary>
 Pre-authenticate should apply the Bearer header to all outbound requests
 If the request comes back with a 401, hopefully the framework will call
 Authenticate to cause a refresh to occur.
</summary>
</member>
<member name="M:OAuth2Client.OAuth2BearerModule.System-Net-IAuthenticationModule-Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
<summary>
 presumably called in response to a WWW-Authenticate challenge from the
 http server. Since the Bearer token we possessed had been applied, this
 must mean we need to refresh it.
</summary>
</member>
<member name="">

</member>
<member name="T:OAuth2Client.OAuth2BearerModule">
<summary>
 An OAuth2 authentication module for System.Net, supporting OAuth2 clients.
 An IStorage must be supplied to fetch OAuth2 Secrets and Credentials and to store refreshed Credentials.
 The scope is a space-separated list of server-defined scopes.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:OAuth2Client.OAuth2Credential">
<summary>
 ICredentials for the OAuth2 auth module.
 Each HttpWebRequest can be supplied with these credentials to
 allow it to do OAuth2 exchanges. Using this class will register
 an appropriate module with System.Net.AuthorizationManager so
 these credentials are issued in response to Bearer challenges.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:OAuth2Client.AuthHandler.OAuth2BearerHandler">
<summary>
 This Handler can be supplied to System.Net.HttpClient to pemit it to work against an OAuth2-protected host.
 It will add the appropriate Authorization header to requests, and will refresh the OAuth2 access token if
 the request fails due to a 401.

 The storage will be used to gather the secrets and credentials, and will be used to store the credentials
 if they end up being refreshed.
</summary>
</member>
<member name="M:OAuth2Client.AuthHandler.shouldRefresh(System.Net.Http.HttpResponseMessage)">
<summary>
 We should only refresh if we see the OAuth2 Bearer WWW-Authenticate in the headers.
</summary>
</member>
<member name="">

</member>
<member name="M:OAuth2Client.AuthHandler.collectBearerParams(System.Net.Http.HttpResponseMessage)">
<summary>
 Attempt to parse the &quot;x=y, z=q&quot; style parameters from a WWW-Authenticate header
 In a 401 from an OAuth2 endpoint, WWW-Authenticate might look like this:

    WWW-Authenticate: Bearer realm=&quot;example&quot;, error=&quot;invalid_token&quot;, error_description=&quot;The access token expired&quot;

 See http://tools.ietf.org/html/rfc6750#page-7
 Find any &quot;WWW-Authenticate: Bearer&quot; headers in the response.
</summary>
</member>
<member name="T:OAuth2Client.AuthHandler">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:OAuth2Client.Extensions.FileExtensions">

</member>
<member name="M:OAuth2Client.HttpClientExtensions.HttpClient.WithOAuth2.Static(System.String,Microsoft.FSharp.Core.FSharpOption{OAuth2Client.IStorageAsync},Microsoft.FSharp.Core.FSharpOption{System.Net.Http.HttpClientHandler})">
<summary>
 Create a new HttpClient with the Oauth2 auth handler already plugged in.
 The storage will be used to gather the existing secrets and credentials,
 and to store any newly refreshed credentials from the OAuth2 host.
 If no inner handler is specified, a new System.Net.Http.HttpClientHandler
 will be created to handle requests.
</summary>
</member>
<member name="T:OAuth2Client.HttpClientExtensions">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:OAuth2Client.HttpExtensions">

</member>
<member name="">

</member>
<member name="T:OAuth2Client.HttpWebRequestExtensions">

</member>
<member name="">

</member>
<member name="T:OAuth2Client.HttpWebRequestMethodExtensions">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:OAuth2Client.Listener">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:OAuth2Client.Storage">

</member>
<member name="">

</member>
<member name="T:OAuth2Client.WebClientExtensions">

</member>
</members>
</doc>
